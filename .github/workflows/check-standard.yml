# 2023-06-18
# https://github.com/r-lib/actions/tree/v2/examples
# https://github.com/r-lib/actions#where-to-find-help

on: [push, pull_request, workflow_dispatch]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}
        elasticsearch-version: [8]

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_COMPILE_AND_INSTALL_PACKAGES: never
      COUCHDB_TEST_USER: ${{ secrets.COUCHDB_TEST_USER }}
      COUCHDB_TEST_PWD: ${{ secrets.COUCHDB_TEST_PWD }}

    steps:

      - name: Install development libraries
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libjq-dev


      # generic R workflow:

      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 1
          extra-packages: remotes, DBI, duckdb, sofa, elastic, rcmdcheck, covr

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install dev DuckDB
        if: ${{ (matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'devel') }}
        run: install.packages("duckdb", repos = "https://duckdb.r-universe.dev", type = "source")
        shell: Rscript {0}

      - name: Install dev SQLite
        if: ${{ (matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'devel') }}
        run: remotes::install_github("r-dbi/RSQLite")
        shell: Rscript {0}

      # databases:

      # https://github.com/ankane/setup-postgres#setup-postgres
      # Works on Linux, Mac, and Windows
      - name: PostgreSQL
        uses: ankane/setup-postgres@v1
        with:
          database: test

      # https://github.com/ankane/setup-mongodb#setup-mongodb
      # Works on Linux, Mac, and Windows
      - name: MongoDB
        uses: ankane/setup-mongodb@v1

      # https://github.com/ankane/setup-elasticsearch#setup-elasticsearch
      # Works on Linux, Mac, and Windows
      - name: ElasticSearch
        if: matrix.config.os != 'windows-latest'
        uses: ankane/setup-elasticsearch@v1

      # https://github.com/iamssen/couchdb-github-action
      - name: CouchDB
        if: runner.os == 'Linux'
        uses: iamssen/couchdb-github-action@master
        with:
          couchdb-version: '3.1'


      # for nodbi:

      - name: Install duckdb extension library
        run: |
          library(duckdb)
          drv <- duckdb()
          con <- dbConnect(drv)
          dbExecute(con, 'INSTALL json;')
          dbDisconnect(con)
          duckdb_shutdown(drv)
        shell: Rscript {0}


      # generic workflow:

      - uses: r-lib/actions/check-r-package@v2
        if: ${{ !(matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'devel') }}
        with:
          upload-snapshots: true


      # test coverage:

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'devel'
        # covr::codecov() uploads using environment variable CODECOV_TOKEN
        run: covr::codecov(quiet = FALSE)
        shell: Rscript {0}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
